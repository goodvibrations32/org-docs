#+TITLE: Filtering sensor signal from environmental EMI using Digital Signal Processing methods with a case study application.
#+AUTHOR: Nickolas Torosian
#+AUTHOR: Nikos Papadakis
#+LANGUAGE: gr

:toc:

* The signal theory

** Εισαγωγή

Σε πολλές περιπτώσεις η ανάγκη της επεξεργασίας σημάτων, όπως στις
τηλεπικοινωνίες μετά ή/και πριν την μετάδοση από τον πομπό προς τον
δέκτη, και η εκλογή πληροφοριών από αυτό έθεσαν από νωρίς το πρόβλημα
των παρεμβολών του περιβάλλοντος στις ηλεκτρονικές συσκευές και την
ανάγκη απομόνωσης του φάσματος των συχνοτήτων που χρησιμοποιούνται για
κάθε λειτουργία.

Η απομόνωση αυτή μπορεί να επιτευχθεί είτε μέσω συμβατικών φίλτρων,
δηλαδή αντιστάσεις και πυκνωτές κατάλληλα τοποθετημένους στο κύκλωμα που
συλλέγει την τάση (*ρεύμα μέτρησης*), είτε με την χρήση μεθόδων ψηφιακής
επεξεργασίας σημάτων (DSP). Στις μέρες μας προτιμάται ο 2ος τρόπος λόγω
της ραγδαίας εξέλιξης των Η/Υ με αποτέλεσμα να επιφέρει μεγαλύτερο
κόστος η εγκατάσταση αναλογικών φίλτρων σε κάθε θέση που απαιτείται.

Οι μέθοδοι αλλά και η πληθώρα συστημάτων λήψης και ανάλυσης σημάτων τις
τελευταίες δεκαετίες έχουν, αφενός εξελιχθεί ως προς την υπολογιστική
ισχύ με γρηγορότερους επεξεργαστές και αλγόριθμους, αφετέρου δίνουν
πλέον την δυνατότητα διαχείρισης των πληροφοριών απομακρυσμένα με
αποτέλεσμα την ευρύτερη εγκαθίδρυση των ψηφιακών μέσων επεξεργασίας
σημάτων. Στις μέρες μας η ανάγκη διαχείρισης ολοένα και μεγαλύτερα
αρχεία δεδομένων με καλύτερη ακρίβεια οδήγησε την επιστημονική κοινότητα
στην χρήση της μεθόδου *μετα-επεξεργασίας* (post-processing). Βασικό όφελος
ήταν η δυνατότητα επαναλληψιμότητας του πειράματος και σύγκρισης των
αποτελεσμάτων σε όλο τον κόσμο, ουσιαστική αρχή της πειραματικής
διαδικασίας. Έτσι με την χρήση προγραμματισμού δίνεται πλέον η
δυνατότητα στον ερευνητή, να δημιουργεί ένα περιβάλλον προσομοίωσης και
να δοκιμάζει διάφορες λύσεις χωρίς να επισκεφτεί την πειραματική διάταξη
σε πολλές περιπτώσεις μετά την καταγραφή των μετρήσεων.

Στην παρούσα εργασία θα πραγματευτούμε την απομείωση συγκεκριμένων
συχνοτήτων με την χρήση Ψηφιακής Ανάλυσης Σημάτων και φίλτρων, διαφόρων
κατηγοριών. _Στο πλαίσιο αυτό θα παρουσιαστεί, μια μελέτη που
πραγματοποιήθηκε σε συνεργασία με το εργαστήριο Αιολικής Ενέργειας του
τμήματος Μηχανολόγων Μηχανικών στο Ελληνικό Μεσογειακό Πανεπιστήμιο με
θέμα ….._ Η ιδιαιτερότητα που παρουσιάστηκε στην εγκατάσταση ήταν
παρεμβολές από ηλεκτρικό μετασχηματιστή, που όμως ήταν αδύνατο να
αφαιρεθεί, και ταυτόχρονα ο σχεδιασμός όπως και η τοποθέτηση ενός
αναλογικού φίλτρου θα ενέτασαν μεγάλο κόστος και περιπλοκότητα. Θα
αναλυθούν οι δομές σημάτων που επεξεργάστηκαν καθώς και οι τύποι των
φίλτρων που χρησίμευσαν στην απομόνωση των ζητούμενων σημάτων. Επίσης θα
υπάρξει παράθεση των θετικών και αρνητικών που παρατηρήθηκαν κατά την
διάρκεια εκτέλεσης της επεξεργασίας και καταγραφής των δεδομένων (τύποι
αρχείων δεδομένων). Τέλος θα ήθελα να ευχαριστήσω τον καθηγητή μου κ.
Νίκο Παπαδάκη για την καθοδήγησή του και την υπομονή που έδειξε για τις
λιγοστές γνώσεις μου στον προγραμματισμό.


** Ιστορική αναδρομή
    Από την εποχή της ανακάλυψης του Απειροστικού λογισμού (calculus)
τον 17ο αιώνα, οι επιστήμονες προσπαθούν να εξηγήσουν τα φυσικά
φαινόμενα με μαθηματικά μοντέλα χρησιμοποιώντας εξισώσεις
συνεχών μεταβλητών και διαφορικές εξισώσεις. Χρησιμοποιήθηκαν
τεχνικές αριθμητικής επίλυσης όταν οι αναλυτικές λύσεις δεν
ήταν εφικτό να καθοριστούν. Αργότερα μαθηματικοί του 18ου αιώνα
όπως οι Ευλερ, Μπερνούλι και Λαγκραντζ κατασκεύασαν μεθόδους
για αριθμητική ολοκλήρωση και την εισαγωγή εξισώσεων συνεχών
μεταβλητών. Μια ιστορική μελέτη από τους Heideman, Johnson και
Burrus (1984) έδειξε ότι ο Gauss είχε ανακαλύψει την βασική
αρχή του γρήγορου μετασχηματισμού Fourier ήδη από το 1805, πριν
την δημοσίευση της διατριβής του .... πάνω στην απεικόνιση
αρμονικών σειρών εξισώσεων.
    Στις αρχές του 1950, η ανάλυση σημάτων γινόταν κυρίως με
αναλογικά συστήματα κατασκευασμένα από ηλεκτρονικά κυκλώματα
ακόμα και με μηχανικές συσκευές. Ενώ οι Η/Υ είχαν κάνει την
είσοδό τους ήδη σε επιχειρήσεις και επιστημονικά εργαστήρια
ήταν ακόμα ακριβοί με περιορισμένες δυνατότητες. Περίπου εκείνη
την εποχή ξεκίνησε η ανάγκη για πιο εξειδικευμένες μεθόδους
στην ανάλυση σημάτων και στράφηκε η προσοχή στην ανάλυση
διακριτού χρόνου σημάτων. Μια από τις πρώτες εφαρμογές των Η/Υ
ήταν η καταγραφή σεισμικών δονήσεων σε πλατφόρμες εξόρυξης
πετρελαίου, που καταγράφονταν σε μαγνητική ταινία για να επεξεργα-
στούν αργότερα. Η διαδικασία αυτή δεν μπορούσε να γίνει σε
πραγματικό χρόνο, καθώς μπορεί να χρειαζόντουσαν κάποια
λεπτά ακόμα και ώρες για την επεξεργασία μερικών δευτερολέπτων
από τις μαγνητικές ταινίες.
    Την ίδια εποχή για όσους είχαν την δυνατότητα να χρησιμοποιήσουν
ψηφιακούς υπολογιστές, ήταν εύκολο να δημιουργήσουν ένα περιβάλ-
λον προσομοίωσης για να μελετήσουν νέους αλγόριθμους και μεθόδους
ανάλυσης σημάτων πριν χρησιμοποιήσουν πόρους και μηχανικούς για την
κατασκευή της αναλογικής συσκευής που τελικά θα εκτελούσε την
επιθυμητή εργασία. Παραδείγματα τέτοιων προσομοιώσεων ήταν εκείνες
που πραγματοποιήθηκαν στο Εργαστήριο Λίνκολν και στα Εργαστήρια Μπελλ
όπου προσομοιώθηκε ένας κωδικοποιητής φωνής /vocoder./ Στην κατασκευή
ενός αναλογικού καναλιού κωδικοποιητής φωνής, τα χαρακτηριστικά του
φίλτρου επηρεάζουν την ποιότητα της φωνής σε βαθμό που ήταν δύσκολο να
διακριθούν αντικειμενικά. Μέσω προγραμματισμένων προσομοιώσεων
κατάφεραν την ρύθμιση των χαρακτηριστικών, ώστε να καθορίσουν το
αποτέλεσμα της αναλογικής συσκευής πριν την κατασκευή της.

    Εδώ αξίζει να σημειωθεί ότι ενώ η χρήση των Η/Υ βοήθησε στην πειραματική
διαδικασία, μπορούσε μόνο να /προσομοιώσει ή προσεγγίσει/ το αναλογικό
σύστημα ανάλυσης σημάτων.

    Καθώς τα σήματα ξεκίνησαν να επεξεργάζονται σε ψηφιακούς υπολογιστές, οι
ερευνητές αναγκάστηκαν πολύ γρήγορα να χρησιμοποιούν ολοένα και πιο περί-
πλοκους αλγόριθμους επεξεργασίας σημάτων. Πολλοί από τους αλγόριθμους
εξελίχθηκαν λόγω της ευελιξίας που παρείχε το προγραμματιστικό περιβάλλον
σε αντίθεση με την μόνιμη αναλογική κατασκευή, όπου περιορίζεται η δυνατό-
τητα πειραματισμού. Έτσι η συνεχής εξέλιξη και ευελιξία της ψηφιακής επε-
ξεργασίας σημάτων έδωσε το έναυσμα για την ολική ψηφιοποίηση των συσκευών
και μεθόδων της επεξεργασίας και διάδοσης σημάτων στην πλειοψηφία των
εγκαταστάσεων. Εκείνη την περίοδο ξεκίνησε ενεργά η δημιουργία ψηφιακών
κωδικοποιητών φωνής, ψηφιακών αναλυτών φάσματος κ.α. συσκευών αμιγώς ψηφι-
ακής επεξεργασίας σήματος, με την ελπίδα ότι τελικά τέτοια συστήματα θα
αποκτούσαν πρακτικές εφαρμογές.

    Μία νέα σκοπιά προς την επεξεργασία σημάτων διακριτού χρόνου επιταχύνθηκε
με την δημοσίευση από τους Cooley and Tukey (1965) ενός αποδοτικού αλγόρι-
θμου για τον υπολογισμό του μετασχηματισμού Fourier. Η κλάση αυτή θα γίνει
αργότερα γνωστή ως Ταχύς Μετασχηματισμός Fourier (F.F.T. /Fast Fourier
Transform/). Ο F.F.T. ήταν αρκετά σημαντικός για πολλούς λόγους. Βασικό
πρόβλημα των αλγόριθμων της εποχής ήταν ότι απαιτούσαν χρόνους
επεξεργασίας πολύ μεγαλύτερους από τον πραγματικό χρόνο του
καταγεγραμμένου σήματος. Αυτό συνέβαινε γιατί στις περισσότερες
περιπτώσεις απαιτείται η χρήση ανάλυσης φάσματος του σήματος και μέχρι
τότε δεν υπήρχε κάποιος αποδοτικός αλγόριθμος. Ο ταχύς μετασχηματισμός
προσέφερε την δυνατότητα στους ερευνητές να πειραματίζονται σε
πραγματικούς χρόνους με την εγκατάσταση, καθώς μείωσε δραστικά τον χρόνο
επεξεργασίας κατά πολλές τάξεις μεγέθους. Επιπρόσθετα πολλοί αλγόριθμοι
που δεν είχαν καμία πρακτική εφαρμογή, λόγω του χρόνου επεξεργασίας,
ξεκίνησαν να έχουν πρακτικές εφαρμογές στην βιομηχανία και αργότερα στα
προϊόντα για τον γενικό πληθυσμό.

    Άλλη μια σημαντική ιδιότητα του F.F.T. που βοήθησε στον σχεδιασμό καλύτερων
συσκευών ήταν ότι προγραμματίστηκε με βάση τα σήματα διακριτού χρόνου.
Δηλαδή εμπεριείχε τις απαιτούμενες ιδιότητες και μαθηματικά ώστε να
διαχειρίζεται ψηφιοποιημένα σήματα -διακριτού χρόνου- και να μην
/προσομοιώνει/ μια αναλογική συμπεριφορά ενός σήματος ή συστήματος.
Έτσι η δυνατότητα σχεδιασμού συστημάτων που προβλεπόταν η ακριβής
συμπεριφορά του βοήθησε στην εξέλιξη της επεξεργασίας σημάτων
διακριτού χρόνου χωρίς την ανάγκη συσχέτισης των αποτελεσμάτων
με ένα σύστημα συνεχούς χρόνου (αναλογικού συστήματος). Έτσι η ένταξη
των διακριτών σημάτων ως ξεχωριστή μέθοδος επεξεργασίας προσέφερε στην
ανάπτυξη τεχνολογίας μειώνοντας, εκτός από τους απαιτούμενους χρόνους,
το κόστος και τον όγκο των εγκαταστάσεων για την επίτευξη του στόχου.

    Παράλληλα η επινόηση και εφεύρεση των μικρο-ελεγκτών στον τομέα της
μικροηλεκτρονικής επέφερε περαιτέρω μείωση του κόστους. Ενώ οι
πρώτες συσκευές μικρο-ελεγκτών δεν παρείχαν τις απαιτούμενες δυνατότητες
για την ολοκλήρωση των συστημάτων επεξεργασίας διακριτών σημάτων, από
τις αρχές της δεκαετίας του '80 η ταχύτητα τους αυξάνεται εκθετικά.
Επιπρόσθετα η αρχιτεκτονική και τεχνολογία των ολοκληρωμένων κυκλωμάτων
(I.C. /Intergated Circuit/) αναπτύχθηκε προς την κατεύθυνση για την κατασκευή
ολοένα και ταχύτερων υπολογιστών για την διαχείριση ακέραιων και δεκαδικών
αριθμών. Έτσι σήμερα η ανάλυση σημάτων, η καταγραφή όπως και η μετάδοσή τους
γίνεται πολλές φορές εξ' ολοκλήρου από ψηφιακά συστήματα.

** Σήματα συνεχούς χρόνου (Continuous time signals)
*** Γενικός ορισμός
    Σήμα συνεχούς χρόνου ονομάζεται ένα σήμα x(t), το οποίο ορίζεται για
κάθε τιμή του t σε κάποιο διάστημα χρόνου [α,β]. Συνήθως τα συναντούμε
στην μορφή συνεχούς ρεύματος σε μετρητικές και άλλες συσκευές σε εξόδους
για την ένδειξη κάποιας τιμής ή απεικόνιση σε παλμογράφο. Τα σήματα
συνεχούς χρόνου χωρίζονται σε αναλογικά και διακριτά σήματα συνεχούς
χρόνου.

*** Αναλογικό και διακριτό σήμα συνεχούς χρόνου
    Αναλογικά σήματα ονομάζονται εκείνα που η ανεξάρτητη μεταβλητή του
χρόνου (t) και η μεταβλητή του πλάτους (εξαρτημένη μεταβλητή ως προς τον
χρόνο) λαμβάνουν συνεχής και πραγματικές τιμές, π.χ. y(t) = 12 * t.
Διακριτά σήματα συνεχούς χρόνου ονομάζονται όσα ή εξαρτημένη τιμή
(πλάτος) παίρνει διακριτές τιμές, π.χ. ψ(t) = Α * t, όπου Α = 0, … ,ν
και t = [α,β] (συνεχές διάστημα χρόνου).



** TODO Σήματα διακριτού χρόνου (discrete time signals and systems)
*** Γενικός ορισμός
    Σήμα διακριτού χρόνου ονομάζεται μια ακολουθία αριθμών καταγεγραμμένες
ανά συγκεκριμένο χρονικό διάστημα, π.χ. κάθε 0,01 δευτερόλεπτο. Το
διάστημα αυτό ορίζει την ταχύτητα καταγραφής του σήματος από την
εκάστοτε συσκευή, όμως εμείς αναφερόμαστε σε αυτό το χρόνο μέσω της
συχνότητας καταγραφής ή αλλιώς σαμπλινγ φρικ. Η συχνότητα αυτή ορίζεται
ως το πηλίκο ενός δευτερολέπτου ως προς το χρονικό διάστημα καταγραφής,
δηλαδή από το παραπάνω παράδειγμα θα είχαμε μια συχνότητα καταγραφής
\\begin{equation} $fs = \frac{1}{0,01}$ \\end{equation} .

    Σημαντικό είναι να αναφερθεί ότι υπάρχει ένα όριο το οποίο πρέπει να
τηρείται ώστε η επαναδημιουργία του σήματος να απεικονίζει όσο το
δυνατόν πιο πολύ στο συνεχές σήμα που καταγράφηκε στην αρχή. Θα
αναφερθούμε αργότερα στο εν λόγω θεώρημα του φυσικού Νικουιστ?!
*** Εφαρμογές
    Στην κατηγορία αυτή κατατάσσονται τα περισσότερα σήματα που
χρησιμοποιούνται σήμερα λόγω της χρήσης Η/Υ για την καταγραφή και
παραγωγή ήχου και εικόνας. Η ένταξη των ψηφιακών σημάτων επιτάχυνε την
επεξεργασία και μείωσε δραστικά τον χώρο αποθήκευσης στην μνήμη των
υπολογιστών.

** Θεωρία καταγραφής σημάτων (Sampling theory)
*** Εισαγωγή
    Σε αυτή την ενότητα θα περιγραφούν οι βασικές θεωρίες που χρησιμοποιούνται
για την ψηφιακή καταγραφή και επεξεργασία σημάτων καθώς και κάποια προβλήματα
που μπορεί να εμφανιστούν κατά τις διαδικασίες αυτές. Μια από τις σημαντικότερες
θεωρίες είναι του Φυσικού και Ηλεκτρολόγου Μηχανικού Harry Nyquist,
όπου θα αναφερθεί στη συνέχεια. Επίσης θα αναφερθούμε σε διαστρεβλώσεις
και καταστρεπτικές συμπεριφορές των συστημάτων κατά την μετατροπή τους από
συνεχή σε διακριτά σήματα και σε τρόπους αναγνώρισης και αντιμετώπισης
των προβλημάτων.
*** Niquist frequency
    Στην επεξεργασία σημάτων η συχνότητα Niquist είναι ένα χαρακτηριστικό μέγεθος
στις καταγραφικές συσκευές, όπου καταγράφουν σήματα συνεχούς χρόνου σε διακριτές
ακολουθίες (ψηφιακά σήματα). Στην πράξη αν η υψηλότερη συχνότητα ενός σήματος
είναι μικρότερη από την συχνότητα Niquist της συσκευής, το καταγεγραμμένο σήμα
δεν επηρεάζεται από αλλοίωση (aliasing) λόγω της διαδικασίας.

Ορίζεται ώς η μισή της συχνότητας καταγραφής και μετριέται σε κύκλους ανά δευτερόλεπτο
(Hz). Σε κλασικές εφαρμογές ψηφιακής καταγραφής, μετά την συσκευή τοποθετείται
ένα φίλτρο anti-aliasing που αποτρέπει την αλλοίωση μειώνοντας την ισχύ των
συνχοτήτων πάνω από ένα όριο. Τέλος, ορίζεται η ταχύτητα δειγματοληψίας που
παρέχει την λιγότερη δυνατή αλλοίωση, έχοντας υπ' όψη οτί η μεγαλύτερη
συχνότητα που θα αναπαραχθεί αργότερα από το ψηφιακό αντίγραφο θα είναι
ίση με την συχνότητα Νικουιστ.

*εδω πρεπει να μπει ο γενικος τυπος υπολογισμού του Νικουιστ*

The Sampling frequency should be at least 2.2 times the capturing frequency.
reference : https://en.wikipedia.org/wiki/Nyquist_frequency


*** Μείωση αριθμού δειγμάτων (Decimation and down-sampling)
Η τεχνική αυτή εφαρμόζεται σε ψηφιακά σήματα με πολλά δείγματα ανά
χρονικό διάστημα που όμως η τυπική απόκληση προδίδει μια περιοδική
κίνηση που σχετίζεται με ταλάντωση. Τότε είναι εύλογο να χωριστεί το
σήμα σε μικρότερα “κομμάτια”. Αύτο έχει σαν αποτέλεσμα την ταχύτερη
ανάλυση των δεδομένων και την ευελιξία της επιλογής ομάδων σε συνάρτηση
με τον χρόνο ή κάποιο άλλο κριτήριο. Εφαρμόζεται συχνά στην
καθημερινότητά μας, καθώς η συμπίεση αρχείων και τα πρότυπα αρχεία ήχου
και εικόνας συμπεριλαμβάνουν μία ή και περισσότερες διαδικασίες μείωσης
του αριθμού των δειγμάτων.

Στην επεξεργασία ψηφιακών σημάτων οι όροι μείωση αριθμού δειγμάτων,
αποδεκατισμός και συμπίεση μπορεί να έχουν ταυτόσημα νοήματα ή μπορεί να
περιγράφουν την απομείωση συχνοτήτων και απορριψη αριθμού δειγμάτων σε
ένα σύστημα ψηφιακής καταγραφής σημάτων πολλαπλών συχνοτήτων. Αργότερα
θα αναλυθεί η σημασία τέτοιων συστημάτων.

Αποδεκατισμός ενός ψηφιακού σήματος σημαίνει η αποθήκευση τελικώς του
κάθε 10ου δείγματος από το αρχικό καταγεγραμμένο σήμα με συγκεκριμένη
συχνότητα καταγραφής. Αυτό έχει επεκταθεί ορίζοντας τον αποδεκατισμό
κατά έναν παράγοντα που συνήθως είναι σταθερός αριθμός και μπορεί να
λάβει ακέραιες και δεκαδικές τιμές.
Έδω αξίζει να σημειωθεί η ανάγκη να λαμβάνει ο παράγοντας αυτός μια
λογική τιμή, για παράδειγμα ένα ψηφιακό σήμα που έχει διάρκεια πέντε
(5) δευτερόλεπτα και καταγράφηκε από συσκευή που είχε συχνότητα
καταγραφής 20 χερτζ ένας παράγοντας 101 προφανώς δεν θα άφηνε κανένα
δείγμα στο νέο ψηφιακό σήμα. Επιπρόσθετα το όριο για να αποφύγουμε την
αλλοίωση απαιτεί το τελικό αποτέλεσμα των διαδικασιών είναι τα 10
δείγματα ανά δευτερόλεπτο (10 χερτζ). Επομένως θέτοντας τον παράγοντα
αποδεκατισμού 51 θα παρείχε ένα σήμα που θα ήταν αλλοιωμένο.


the process is performed on a sequence of samples of a signal or a
continuous function, it produces an approximation of the sequence that
would have been obtained by sampling the signal at a lower rate (or
density, as in the case of a photograph).
When the anti-aliasing filter is an IIR design, it relies on feedback
from output to input, prior to the second step. With FIR filtering, it
is an easy matter to compute only every Mth output. The calculation
performed by a decimating FIR filter for the nth output sample is a dot
product:[b]
\begin{math}
{\ y[n]=∑ _{k=0}^{K-1}x[nM-k]⋅ h[k],}y[n]=∑
_{k=0}^{K-1}x[nM-k]⋅ h[k]
\end{math}
{\displaystyle y[n]=∑ _{k=0}^{K-1}x[nM-k]⋅ h[k],}y[n]=∑
_{k=0}^{K-1}x[nM-k]⋅ h[k], where the h[•] sequence is the impulse
response, and K is its length. x[•] represents the input sequence being
downsampled. In a general purpose processor, after computing y[n], the
easiest way to compute y[n+1] is to advance the starting index in the
x[•] array by M, and recompute the dot product. In the case M=2, h[•]
can be designed as a half-band filter, where almost half of the
coefficients are zero and need not be included in the dot products.

Impulse response coefficients taken at intervals of M form a
subsequence, and there are M such subsequences (phases) multiplexed
together. The dot product is the sum of the dot products of each
subsequence with the corresponding samples of the x[•] sequence.
Furthermore, because of downsampling by M, the stream of x[•] samples
involved in any one of the M dot products is never involved in the other
dot products. Thus M low-order FIR filters are each filtering one of M
multiplexed phases of the input stream, and the M outputs are being
summed. This viewpoint offers a different implementation that might be
advantageous in a multi-processor architecture. In other words, the
input stream is demultiplexed and sent through a bank of M filters whose
outputs are summed. When implemented that way, it is called a polyphase
filter.

For completeness, we now mention that a possible, but unlikely,
implementation of each phase is to replace the coefficients of the other
phases with zeros in a copy of the h[•] array, process the original x[•]
sequence at the input rate (which means multiplying by zeros), and
decimate the output by a factor of M. The equivalence of this
inefficient method and the implementation described above is known as
the first Noble identity.[6][c] It is sometimes used in derivations of
the polyphase method.
\begin{math}
y[n]=\sum _{k=0}^{K-1}x[nM-k]\cdot h[k]
\end{math}


Reference
- [[https://en.wikipedia.org/wiki/Downsampling_(signal_processing)][wikipedia]]



*** Multi rate Digital signal processing
In many areas of digital signal processing (Digital Signal Processing) _applications—such as communications, speech, and audio processing—rising or lowering of a sampling rate is required_.
/The principle that deals with changing the sampling rate belongs essentially to multi-rate signal processing/
(Ifeachor and Jervis, 2002; Porat, 1997; Proakis and Manolakis, 1996; Sorensen and Chen, 1997).
As an introduction, we will focus on sampling rate conversion; that is, sampling rate reduction or increase.

[[https://www.eetimes.com/multirate-dsp-part-1-upsampling-and-downsampling/][reference]]

**** Sampling rate reduction by an integer factor
:PROPERTIES:
:TAGS_ALL: last doc
:END:
This process is referred as *down-sampling of data sequence*. This produces an aliasing effect in the signal which should be avoided.


*** Aliasing
In signal processing and related disciplines, aliasing is an effect that causes different signals to become indistinguishable (or aliases of one another) when sampled.
It also often refers to the distortion or artifact that results when a signal reconstructed from samples is different from the original continuous signal.

Aliasing can occur in signals sampled in time, for instance [[https://en.wikipedia.org/wiki/Digital_audio][digital audio]], or the stroboscopic effect, and is referred to as temporal aliasing. It can also occur in spatially sampled signals
(e.g. moiré patterns in digital images); this type of aliasing is called spatial aliasing.

Aliasing is generally avoided by applying low-pass filters or anti-aliasing filters ([[https://en.wikipedia.org/wiki/Anti-aliasing_filter][AAF]]) to the input signal before sampling and when converting a signal from a higher to a lower sampling rate.
Suitable [[https://en.wikipedia.org/wiki/Aliasing][reconstruction filtering]] should then be used when restoring the sampled signal to the continuous domain or converting a signal from a lower to a higher sampling rate.

For [[https://en.wikipedia.org/wiki/Spatial_anti-aliasing][spatial-anti-aliasing]], the types of anti-aliasing include:
 1. [[https://en.wikipedia.org/wiki/Fast_approximate_anti-aliasing][fast sample anti-aliasing (FSAA)]],
    - Description
      Fast approximate anti-aliasing (FXAA) is a screen-space anti-aliasing algorithm created by Timothy Lottes at Nvidia.
      FXAA 3 is released under a public domain license. A later version, FXAA 3.11, is released under a 3-clause BSD license.

    - [[https://en.wikipedia.org/wiki/Fast_approximate_anti-aliasing][Algorithm description and more]]

 2. [[https://en.wikipedia.org/wiki/Multisample_anti-aliasing][multisample anti-aliasing]],
    - Description
 3. [[https://en.wikipedia.org/wiki/Supersampling][supersampling]]


**** The solution to the problem
They propose an FIR low-pass filter for rejecting the unwanted frequencies.
<<

- To verify this principle, let us consider a signal x (n ) generated by the following:

  $$x (n ) = 5 sin ((2π × 1000n )/8000) + cos ((2π × 2500n )/8000)$$, (12.8)

  with a sampling rate of f s = 8,000 Hz, the spectrum of x (n ) is plotted in the first graph in Figure 12-3a, where we observe that the signal has components at frequencies of 1,000 and 2,500 Hz.

    Now we down-sample x (n ) by a factor of 2, that is, M = 2. According to Equation (12.3), we know that the new folding frequency is 4000/2 = 2000 Hz.
    Hence, without using the anti-aliasing low-pass filter, the spectrum would contain the aliasing frequency of 4 kHz – 2.5 kHz = 1.5 kHz introduced by 2.5 kHz, plotted in the second graph
    in Figure 12-3a.
>>

[[~/Documents/dissertation/org-docs/dissertation document/aliasing_from_downsampling.png]]


*** [[file:~/Downloads/descrete domain signal book.pdf][Discrete fast Fourier transform ttransformransform]]
**** Parseval's theorem
The function
#+begin_latex
\|X(e^(jω))|^2
#+end_latex

is called energy density spectrum, since it determines how the energy density is distributed in the frequency domain.

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::86]]

*** Discrete Time process of continuous time signal

**** Basics

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::189]]

***** Changing the sampling rate
****** using discrete time processing

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::193]]

****** by an integer

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::193]]

****** by a non integer

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::202]]

***** Multi-rate signal processing

****** Basics

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::205]]

*** Structures for discrete signals

**** Intro

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::366]]

**** basic structures for Infinite Impulse Response systems

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::380]]


***** Feedback in Infinite Impulse Response

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::387]]

**** Basic network structures for FIR systems.

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::392]]


** Επεξεργασία σημάτων (Signal process (post-processing))

*** Ορισμός μετα-επεξεργασίας
    Η επεξεργασία ενός σήματος θα πρέπει να γίνεται με προσοχή καθώς είναι
εύκολο να καταστραφεί μέρος της πληροφορίας που περιέχεται ή ακόμα και
να εκδοθούν λανθασμένα συμπεράσματα για την συμπεριφορά του συστήματος.
Εδώ χρησιμοποιήθηκε η *μετα-επεξεργασία* (post-process), δηλαδή τα δεδομένα
καταγράφηκαν με σταθερή συχνότητα δειγματοληψίας σε μορφή αρχείου
δεδομένων (datasets) .tdms μέσω του προγράμματος LabView.

    Η μέθοδος αυτή δίνει την δυνατότητα στον αναλυτή να επεξεργαστεί τα
δεδομένα στον προσωπικό του υπολογιστή ακόμα και να συνδεθεί σε κάποιον
ισχυρότερο υπολογιστή και να τα διαχειριστεί εξ’ αποστάσεως. Μπορεί όμως
να γίνεται και στην εγκατάσταση αυτοματοποιώντας την διαδικασία
καταγραφής των δεδομένων. Τα συστήματα τηλεπικοινωνιών βασίζονται στην
σωστή κωδικοποίηση από τον πομπό και αποκωδικοποίηση στον δέκτη, οι
διαδικασίες αυτές λαμβάνουν χώρα στις συσκευές που καταγράφουν και
μεταδίδουν το σήμα, όμως επειδή η επεξεργασία της
κωδικοποίησης-αποκωδικοποίησης γίνεται αφού καταγραφεί το σήμα σε κάποια
προσωρινή ή μόνιμη μνήμη και έτσι εντάσσεται στην *μετα-επεξεργασία*.

*** Εγκατάσταση εργαστηρίου
    Η εγκατάσταση που χρησιμοποιήθηκε για την συλλογή των δεδομένων
αποτελείται από μία αεροσύραγγα την οποία τροφοδοτεί με σταθερή ταχύτητα
αέρα ένας ηλεκτροκινητήρας προσδεδεμένος σε έναν έλικα. Στην μέση της
σήραγγας υπάρχει ένα πλέγμα διάχυσης ώστε η ροή του αέρα να γίνεται όσο
το δυνατόν πιο ομοιόμορφα στην έξοδο όπου βρίσκεται και το αισθητήριο
όργανο για την καταγραφή της ταχύτητας του ανέμου. Παρακάτω φαίνεται μια
εικόνα της εγκατάστασης σε σχηματικό διάγραμμα.
[[file:~/Pictures/Wind_Tunnel_setup_lab.png]]


    Ένας λόγος που δεν χρησιμοποιήθηκε επεξεργασία σε πραγματικό χρόνο είναι
ότι η εγκατάσταση "που χρησιμοποιήθηκε για την συλλογή των δεδομένων"
κατασκευάστηκε με σκοπό την σύνδεσή του σε κεντρική μονάδα επικοινωνίας
και από εκεί πραγματοποιείται σύνδεση μέσω σειριακής θύρας USB με Η/Υ,
όπου και καταγράφεται το σήμα του αισθητήριου οργάνου (pitot-tube). Ένας
δεύτερος λόγος ήταν η ανάγκη να δοκιμαστούν διαφορετικές μέθοδοι
αφαίρεσης του θορύβου και προφανώς αυτό θα ήταν πιο δύσκολο εάν έπρεπε
να γίνει σε πραγματικό χρόνο αλλάζοντας τις απαραίτητες παραμέτρους για
την ρύθμιση του φίλτρου. Θα έπρεπε λοιπόν να εγκατασταθεί ανάλογη
συσκευή, όπως ένας μικροεπεξεργαστής, που θα είχε την δυνατότητα για
υψηλές ταχύτητες δειγματοληψίας καθώς η καταγραφή έγινε στα 100 kHz.
Αυτό θα αύξανε πολύ το κόστος της κατασκευής και θα απαιτούσε
βαθμονόμιση του φίλτρου για να μην προστεθεί περαιτέρω σφάλμα στην
μέτρηση


** Filter design

*** Intro
[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::465
]]
*** D.T. Infinite Impulse Response from C.T. filters

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::468]]

*** FIR by WINDOWING

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::491]]

**** Common windows used
- Some basic properties for:
  - Rectangle
  - Barlett
  - Hanning
  - Hamming
[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::494
]]

**** Kaiser window method

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::500]]


**** Optimum approximations of FIR

- Here is a deep analysis for the appropriate implementation of the FIR filters in respect to /M value???/

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::491]]


**** F


** Discrete Fourier Transform (D.F.T.)
*** Intro

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::567]]

*** PROJ [#A] Periodic convolution

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::574]]

*** PROJ [#A] Linear convolution using D.F.T.

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal::602]]


** Computation of D.F.T.

*** Intro
- The D.F.T. has important role in Discrete Time signal-processing. Also there are efficient algorithms for programming (python, C++..).  They are called FFT algorithms (Fast Fourier Transform) but they are calculating all /N values of the D.F.T./. If only a portion of the frequencies are needed (0 <= ω <= 2π) other algorithms could be more efficient.
[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::602]]


** D.F.T. analysis of signals

*** Intro
- For a finite-length signals the D.F.T. provides frequency-domain samples of the discrete-time Fourier transform, and the implications of this sampling must be clearly understood.
***** Example
- In linear filtering or convolution implemented by multiplying D.F.T.s rather than discrete-time Fourier transforms,a circular convolution is implemented and special care **must** be taken to ensure that the results will be equivalent to a linear convolution.

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::719]]

*** Windowing effect
- The purpose of the window in the time-dependent Fourier transform is to limit the extend of the sequence to be transformed so the spectral characteristics are reasonably stationary over the duration of the window.

  /**The more rapidly the signal characteristics change, the shorter the window should be**/

[[file:~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::743]]

*** Sampling in Time and Frequency

* Laboratory case study

** General idea and method
*** Intro
In the present case study the aim is to find a way to filter Electromagnetic Interference at 10-20 kHz via digital signal processing (Digital Signal Processing). The reason for choosing a post-process filtering is the ability to create a system agnostic processing that could be implemented across platforms and construction standards. The main goal is to remove those frequencies and find a best way for filtering this particular type of distortion.

As examined with raising the sampling frequency a curtain amount of noise is imported with distinguishable distortion of the original signal. This could be avoided by reduction of the sampling frequency, but this will introduce Aliasing effect. This was observed when a last recording of the signal with the wind tunnel and were appearing to be less affected than the compressed air measurements. #NOTE Add to the description the reason for

*** UNIV Laboratory setup and measurement tools
**** Setup
  The idea is to measure Wind speed produced from a large fan inlet inside contained environment to control the direction. After that a wide-angle and a matrix like (setting chamber) different users are used for the even distribution of air flow. At the last section there is a contraction section for regulating the area of the test section. This is due to construction size and lab space. ??????????


A [[file:~/Pictures/Wind_Tunnel_setup_lab.png][diagram]]

**** Equipment

***** Wind sensor
The measurements used in this case study were taken from a differential pressure transducer with the details bellow
#+properties: Device details
:MODEL: Delta Ohm HD-408T
:WORK_PRINCIPLE: Differential pressure transducer
:RANGE: 0-10 m-bar
:RESISTANCE: 330 Ω
+ This device is connected with a NI USB-6353 (with optocouplers and max. rate 1.5 MS/s).


***** Data collection and analysis

****** Signal Process

The post-process is implemented with basic Digital Signal Processing python libraries and there was also developed a custom library for ease of analysis of curtain datatype files such as (.h5, .tdms) and signal processing.

- Filtering method
  + Infinite Impulse Response
    Those types are more likely to consume more processing power and RAM usage but are really really fast and reliable. They introduce some delay if applied but if the phase shift is not a big deal for the data i.e. some generally stable dc measurement but with frequency fluctuations and the signal will be studied in frequency domain. That example is not the case when the signal measured is A.C..
  + FIR
    This method is fundamentally different in respect to Infinite Impulse Response but the ability to manage large datasets with accuracy although is present it is not optimized and takes a lot of time. In opposition the frequency response is very good for EMI due to easy delay elimination with a simple equation.
    [[~/Documents/dissertation/org-docs/dissertation document/books/discrete_domain_signal.pdf::468]]
  + MEDIAN

- Filter type
  + Butterworth
  + Bessel
  + Chebby_shev
  + Elliptic
****** Recording software

The data are collected with Lab View as a recording program. Here need more info from Papadaki......

Here the signal is transferred via Telecommunication cable for minimizing the system file.

#+begin_src org lang:gr :results: raw drawer
Εδώ η ιδέα είναι να εξηγηθεί λίγο η επεξεργασία που γίνεται από το LabView για λόγους αναφοράς.
#+end_src

***** Other measuring devices
